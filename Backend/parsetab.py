
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND CHAR COMMA DIVIDE ELSE EQUALS EQUALTO FOR GREATER GREATEREQ ID IF INT LBRACE LBRACKET LESS LESSEQ LPAREN MINUS MOD NOT NOTEQUAL NUMBER OR PLUS RBRACE RBRACKET RETURN RPAREN SEMICOLON STRING TIMES VOID WHILEprogram : statement_liststatement_list : statement\n                      | statement_list statementstatement : declaration\n                 | assignment\n                 | function_def\n                 | if_stmt\n                 | while_stmt\n                 | for_stmt\n                 | return_stmtdeclaration : type ID SEMICOLON\n                   | type ID EQUALS expression SEMICOLONtype : INT\n            | CHAR\n            | VOIDassignment : ID EQUALS expression SEMICOLONfunction_def : type ID LPAREN param_list RPAREN LBRACE statement_list RBRACEparam_list : \n                  | paramsparams : param\n              | params COMMA paramparam : type IDif_stmt : IF LPAREN expression RPAREN LBRACE statement_list RBRACE\n               | IF LPAREN expression RPAREN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACEwhile_stmt : WHILE LPAREN expression RPAREN LBRACE statement_list RBRACEfor_stmt : FOR LPAREN expression_opt SEMICOLON expression_opt SEMICOLON expression_opt RPAREN LBRACE statement_list RBRACEexpression_opt : \n                      | expressionreturn_stmt : RETURN expression SEMICOLON\n                   | RETURN SEMICOLONexpression : expression PLUS term\n                  | expression MINUS term\n                  | expression TIMES term\n                  | expression DIVIDE term\n                  | expression MOD term\n                  | expression LESS term\n                  | expression GREATER term\n                  | expression LESSEQ term\n                  | expression GREATEREQ term\n                  | expression EQUALTO term\n                  | expression NOTEQUAL term\n                  | expression AND term\n                  | expression OR term\n                  | termterm : NOT term\n            | factorfactor : NUMBER\n              | STRING\n              | ID\n              | LPAREN expression RPAREN'
    
_lr_action_items = {'ID':([0,2,3,4,5,6,7,8,9,10,11,16,17,18,19,20,22,23,24,25,27,29,34,35,36,43,44,45,46,47,48,49,50,51,52,53,54,55,56,60,64,67,82,86,87,89,91,92,93,94,95,96,98,101,102,103,104,105,106,],[12,12,-2,-4,-5,-6,-7,-8,-9,-10,21,33,-13,-14,-15,-3,33,33,33,33,-30,33,33,-11,33,-29,33,33,33,33,33,33,33,33,33,33,33,33,33,83,-16,33,-12,12,12,12,12,12,33,12,-23,-25,-17,12,12,12,12,-24,-26,]),'IF':([0,2,3,4,5,6,7,8,9,10,20,27,35,43,64,82,86,87,89,91,92,94,95,96,98,101,102,103,104,105,106,],[13,13,-2,-4,-5,-6,-7,-8,-9,-10,-3,-30,-11,-29,-16,-12,13,13,13,13,13,13,-23,-25,-17,13,13,13,13,-24,-26,]),'WHILE':([0,2,3,4,5,6,7,8,9,10,20,27,35,43,64,82,86,87,89,91,92,94,95,96,98,101,102,103,104,105,106,],[14,14,-2,-4,-5,-6,-7,-8,-9,-10,-3,-30,-11,-29,-16,-12,14,14,14,14,14,14,-23,-25,-17,14,14,14,14,-24,-26,]),'FOR':([0,2,3,4,5,6,7,8,9,10,20,27,35,43,64,82,86,87,89,91,92,94,95,96,98,101,102,103,104,105,106,],[15,15,-2,-4,-5,-6,-7,-8,-9,-10,-3,-30,-11,-29,-16,-12,15,15,15,15,15,15,-23,-25,-17,15,15,15,15,-24,-26,]),'RETURN':([0,2,3,4,5,6,7,8,9,10,20,27,35,43,64,82,86,87,89,91,92,94,95,96,98,101,102,103,104,105,106,],[16,16,-2,-4,-5,-6,-7,-8,-9,-10,-3,-30,-11,-29,-16,-12,16,16,16,16,16,16,-23,-25,-17,16,16,16,16,-24,-26,]),'INT':([0,2,3,4,5,6,7,8,9,10,20,27,35,37,43,64,82,85,86,87,89,91,92,94,95,96,98,101,102,103,104,105,106,],[17,17,-2,-4,-5,-6,-7,-8,-9,-10,-3,-30,-11,17,-29,-16,-12,17,17,17,17,17,17,17,-23,-25,-17,17,17,17,17,-24,-26,]),'CHAR':([0,2,3,4,5,6,7,8,9,10,20,27,35,37,43,64,82,85,86,87,89,91,92,94,95,96,98,101,102,103,104,105,106,],[18,18,-2,-4,-5,-6,-7,-8,-9,-10,-3,-30,-11,18,-29,-16,-12,18,18,18,18,18,18,18,-23,-25,-17,18,18,18,18,-24,-26,]),'VOID':([0,2,3,4,5,6,7,8,9,10,20,27,35,37,43,64,82,85,86,87,89,91,92,94,95,96,98,101,102,103,104,105,106,],[19,19,-2,-4,-5,-6,-7,-8,-9,-10,-3,-30,-11,19,-29,-16,-12,19,19,19,19,19,19,19,-23,-25,-17,19,19,19,19,-24,-26,]),'$end':([1,2,3,4,5,6,7,8,9,10,20,27,35,43,64,82,95,96,98,105,106,],[0,-1,-2,-4,-5,-6,-7,-8,-9,-10,-3,-30,-11,-29,-16,-12,-23,-25,-17,-24,-26,]),'RBRACE':([3,4,5,6,7,8,9,10,20,27,35,43,64,82,91,92,94,95,96,98,103,104,105,106,],[-2,-4,-5,-6,-7,-8,-9,-10,-3,-30,-11,-29,-16,-12,95,96,98,-23,-25,-17,105,106,-24,-26,]),'EQUALS':([12,21,],[22,36,]),'LPAREN':([13,14,15,16,21,22,23,24,25,29,34,36,44,45,46,47,48,49,50,51,52,53,54,55,56,67,93,],[23,24,25,34,37,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,]),'SEMICOLON':([16,21,25,26,28,30,31,32,33,38,41,42,57,59,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,88,],[27,35,-27,43,-44,-46,-47,-48,-49,64,67,-28,-45,82,-27,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-50,93,]),'NOT':([16,22,23,24,25,29,34,36,44,45,46,47,48,49,50,51,52,53,54,55,56,67,93,],[29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,]),'NUMBER':([16,22,23,24,25,29,34,36,44,45,46,47,48,49,50,51,52,53,54,55,56,67,93,],[31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,]),'STRING':([16,22,23,24,25,29,34,36,44,45,46,47,48,49,50,51,52,53,54,55,56,67,93,],[32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,]),'PLUS':([26,28,30,31,32,33,38,39,40,42,57,58,59,68,69,70,71,72,73,74,75,76,77,78,79,80,81,],[44,-44,-46,-47,-48,-49,44,44,44,44,-45,44,44,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-50,]),'MINUS':([26,28,30,31,32,33,38,39,40,42,57,58,59,68,69,70,71,72,73,74,75,76,77,78,79,80,81,],[45,-44,-46,-47,-48,-49,45,45,45,45,-45,45,45,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-50,]),'TIMES':([26,28,30,31,32,33,38,39,40,42,57,58,59,68,69,70,71,72,73,74,75,76,77,78,79,80,81,],[46,-44,-46,-47,-48,-49,46,46,46,46,-45,46,46,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-50,]),'DIVIDE':([26,28,30,31,32,33,38,39,40,42,57,58,59,68,69,70,71,72,73,74,75,76,77,78,79,80,81,],[47,-44,-46,-47,-48,-49,47,47,47,47,-45,47,47,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-50,]),'MOD':([26,28,30,31,32,33,38,39,40,42,57,58,59,68,69,70,71,72,73,74,75,76,77,78,79,80,81,],[48,-44,-46,-47,-48,-49,48,48,48,48,-45,48,48,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-50,]),'LESS':([26,28,30,31,32,33,38,39,40,42,57,58,59,68,69,70,71,72,73,74,75,76,77,78,79,80,81,],[49,-44,-46,-47,-48,-49,49,49,49,49,-45,49,49,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-50,]),'GREATER':([26,28,30,31,32,33,38,39,40,42,57,58,59,68,69,70,71,72,73,74,75,76,77,78,79,80,81,],[50,-44,-46,-47,-48,-49,50,50,50,50,-45,50,50,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-50,]),'LESSEQ':([26,28,30,31,32,33,38,39,40,42,57,58,59,68,69,70,71,72,73,74,75,76,77,78,79,80,81,],[51,-44,-46,-47,-48,-49,51,51,51,51,-45,51,51,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-50,]),'GREATEREQ':([26,28,30,31,32,33,38,39,40,42,57,58,59,68,69,70,71,72,73,74,75,76,77,78,79,80,81,],[52,-44,-46,-47,-48,-49,52,52,52,52,-45,52,52,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-50,]),'EQUALTO':([26,28,30,31,32,33,38,39,40,42,57,58,59,68,69,70,71,72,73,74,75,76,77,78,79,80,81,],[53,-44,-46,-47,-48,-49,53,53,53,53,-45,53,53,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-50,]),'NOTEQUAL':([26,28,30,31,32,33,38,39,40,42,57,58,59,68,69,70,71,72,73,74,75,76,77,78,79,80,81,],[54,-44,-46,-47,-48,-49,54,54,54,54,-45,54,54,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-50,]),'AND':([26,28,30,31,32,33,38,39,40,42,57,58,59,68,69,70,71,72,73,74,75,76,77,78,79,80,81,],[55,-44,-46,-47,-48,-49,55,55,55,55,-45,55,55,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-50,]),'OR':([26,28,30,31,32,33,38,39,40,42,57,58,59,68,69,70,71,72,73,74,75,76,77,78,79,80,81,],[56,-44,-46,-47,-48,-49,56,56,56,56,-45,56,56,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-50,]),'RPAREN':([28,30,31,32,33,37,39,40,42,57,58,61,62,63,68,69,70,71,72,73,74,75,76,77,78,79,80,81,83,90,93,97,],[-44,-46,-47,-48,-49,-18,65,66,-28,-45,81,84,-19,-20,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-50,-22,-21,-27,100,]),'COMMA':([62,63,83,90,],[85,-20,-22,-21,]),'LBRACE':([65,66,84,99,100,],[86,87,89,101,102,]),'ELSE':([95,],[99,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'statement_list':([0,86,87,89,101,102,],[2,91,92,94,103,104,]),'statement':([0,2,86,87,89,91,92,94,101,102,103,104,],[3,20,3,3,3,20,20,20,3,3,20,20,]),'declaration':([0,2,86,87,89,91,92,94,101,102,103,104,],[4,4,4,4,4,4,4,4,4,4,4,4,]),'assignment':([0,2,86,87,89,91,92,94,101,102,103,104,],[5,5,5,5,5,5,5,5,5,5,5,5,]),'function_def':([0,2,86,87,89,91,92,94,101,102,103,104,],[6,6,6,6,6,6,6,6,6,6,6,6,]),'if_stmt':([0,2,86,87,89,91,92,94,101,102,103,104,],[7,7,7,7,7,7,7,7,7,7,7,7,]),'while_stmt':([0,2,86,87,89,91,92,94,101,102,103,104,],[8,8,8,8,8,8,8,8,8,8,8,8,]),'for_stmt':([0,2,86,87,89,91,92,94,101,102,103,104,],[9,9,9,9,9,9,9,9,9,9,9,9,]),'return_stmt':([0,2,86,87,89,91,92,94,101,102,103,104,],[10,10,10,10,10,10,10,10,10,10,10,10,]),'type':([0,2,37,85,86,87,89,91,92,94,101,102,103,104,],[11,11,60,60,11,11,11,11,11,11,11,11,11,11,]),'expression':([16,22,23,24,25,34,36,67,93,],[26,38,39,40,42,58,59,42,42,]),'term':([16,22,23,24,25,29,34,36,44,45,46,47,48,49,50,51,52,53,54,55,56,67,93,],[28,28,28,28,28,57,28,28,68,69,70,71,72,73,74,75,76,77,78,79,80,28,28,]),'factor':([16,22,23,24,25,29,34,36,44,45,46,47,48,49,50,51,52,53,54,55,56,67,93,],[30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,]),'expression_opt':([25,67,93,],[41,88,97,]),'param_list':([37,],[61,]),'params':([37,],[62,]),'param':([37,85,],[63,90,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','parser.py',137),
  ('statement_list -> statement','statement_list',1,'p_statement_list','parser.py',141),
  ('statement_list -> statement_list statement','statement_list',2,'p_statement_list','parser.py',142),
  ('statement -> declaration','statement',1,'p_statement','parser.py',149),
  ('statement -> assignment','statement',1,'p_statement','parser.py',150),
  ('statement -> function_def','statement',1,'p_statement','parser.py',151),
  ('statement -> if_stmt','statement',1,'p_statement','parser.py',152),
  ('statement -> while_stmt','statement',1,'p_statement','parser.py',153),
  ('statement -> for_stmt','statement',1,'p_statement','parser.py',154),
  ('statement -> return_stmt','statement',1,'p_statement','parser.py',155),
  ('declaration -> type ID SEMICOLON','declaration',3,'p_declaration','parser.py',159),
  ('declaration -> type ID EQUALS expression SEMICOLON','declaration',5,'p_declaration','parser.py',160),
  ('type -> INT','type',1,'p_type','parser.py',167),
  ('type -> CHAR','type',1,'p_type','parser.py',168),
  ('type -> VOID','type',1,'p_type','parser.py',169),
  ('assignment -> ID EQUALS expression SEMICOLON','assignment',4,'p_assignment','parser.py',173),
  ('function_def -> type ID LPAREN param_list RPAREN LBRACE statement_list RBRACE','function_def',8,'p_function_def','parser.py',177),
  ('param_list -> <empty>','param_list',0,'p_param_list','parser.py',181),
  ('param_list -> params','param_list',1,'p_param_list','parser.py',182),
  ('params -> param','params',1,'p_params','parser.py',186),
  ('params -> params COMMA param','params',3,'p_params','parser.py',187),
  ('param -> type ID','param',2,'p_param','parser.py',194),
  ('if_stmt -> IF LPAREN expression RPAREN LBRACE statement_list RBRACE','if_stmt',7,'p_if_stmt','parser.py',198),
  ('if_stmt -> IF LPAREN expression RPAREN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE','if_stmt',11,'p_if_stmt','parser.py',199),
  ('while_stmt -> WHILE LPAREN expression RPAREN LBRACE statement_list RBRACE','while_stmt',7,'p_while_stmt','parser.py',206),
  ('for_stmt -> FOR LPAREN expression_opt SEMICOLON expression_opt SEMICOLON expression_opt RPAREN LBRACE statement_list RBRACE','for_stmt',11,'p_for_stmt','parser.py',210),
  ('expression_opt -> <empty>','expression_opt',0,'p_expression_opt','parser.py',214),
  ('expression_opt -> expression','expression_opt',1,'p_expression_opt','parser.py',215),
  ('return_stmt -> RETURN expression SEMICOLON','return_stmt',3,'p_return_stmt','parser.py',219),
  ('return_stmt -> RETURN SEMICOLON','return_stmt',2,'p_return_stmt','parser.py',220),
  ('expression -> expression PLUS term','expression',3,'p_expression','parser.py',227),
  ('expression -> expression MINUS term','expression',3,'p_expression','parser.py',228),
  ('expression -> expression TIMES term','expression',3,'p_expression','parser.py',229),
  ('expression -> expression DIVIDE term','expression',3,'p_expression','parser.py',230),
  ('expression -> expression MOD term','expression',3,'p_expression','parser.py',231),
  ('expression -> expression LESS term','expression',3,'p_expression','parser.py',232),
  ('expression -> expression GREATER term','expression',3,'p_expression','parser.py',233),
  ('expression -> expression LESSEQ term','expression',3,'p_expression','parser.py',234),
  ('expression -> expression GREATEREQ term','expression',3,'p_expression','parser.py',235),
  ('expression -> expression EQUALTO term','expression',3,'p_expression','parser.py',236),
  ('expression -> expression NOTEQUAL term','expression',3,'p_expression','parser.py',237),
  ('expression -> expression AND term','expression',3,'p_expression','parser.py',238),
  ('expression -> expression OR term','expression',3,'p_expression','parser.py',239),
  ('expression -> term','expression',1,'p_expression','parser.py',240),
  ('term -> NOT term','term',2,'p_term','parser.py',247),
  ('term -> factor','term',1,'p_term','parser.py',248),
  ('factor -> NUMBER','factor',1,'p_factor','parser.py',255),
  ('factor -> STRING','factor',1,'p_factor','parser.py',256),
  ('factor -> ID','factor',1,'p_factor','parser.py',257),
  ('factor -> LPAREN expression RPAREN','factor',3,'p_factor','parser.py',258),
]
